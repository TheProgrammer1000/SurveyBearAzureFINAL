{"version":3,"file":"main.js","mappings":";;;;;;;;;AAAA,+CAAmC;AACnC,mFAAiE;AACjE,mGAAiD;AAEjD,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AAEtB,6BAA6B;AAC7B,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AAExB,SAAS;AACT,GAAG,CAAC,GAAG,CAAC,sBAAY,CAAC,CAAC;AAEtB,sBAAsB;AACtB,GAAG,CAAC,GAAG,CAAC,mCAAkB,CAAC,CAAC;AAE5B,qBAAe,GAAG,CAAC;;;;;;;;;;;ACfnB,iDAAiC;AACjC,mFAA2F;AAC3F,qEAAkE;AAElE,MAAM,MAAM,GAAG,oBAAM,GAAE,CAAC;AAExB,MAAM,CAAC,GAAG,CACN,mBAAmB,EACnB,6BAAK,EAAC,UAAU,CAAC,CAAC,SAAS,EAAE,EAC7B,CAAO,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;IACrB,IAAI;QACA,YAAY;QACZ,MAAM,MAAM,GAAG,wCAAgB,EAAC,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;YACnB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;SAC3D;QAED,8BAA8B;QAC9B,MAAM,MAAM,GAAG,MAAM,kCAAa,EAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACxD,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACpB;IAAC,OAAO,GAAG,EAAE;QACV,IAAI,CAAC,GAAG,CAAC,CAAC;KACb;AAEL,CAAC,EAAC,CAAC;AAEP,MAAM,CAAC,IAAI,CAAC,SAAS,EACjB,4BAAI,EAAC,gBAAgB,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,gCAAgC,CAAC,EACtG,4BAAI,EAAC,wBAAwB,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,+CAA+C,CAAC,EAClH,CAAO,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;IACrB,IAAI;QACA,YAAY;QACZ,MAAM,MAAM,GAAG,wCAAgB,EAAC,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;YACnB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;SAC3D;QAED,MAAM,MAAM,GAAG,MAAM,8BAAS,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACzC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACpB;IAAC,OAAO,GAAG,EAAE;QACV,IAAI,CAAC,GAAG,CAAC,CAAC;KACb;AACL,CAAC,EAAC,CAAC;AAEP,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAC5B,6BAAK,EAAC,UAAU,CAAC,CAAC,SAAS,EAAE,EAC7B,4BAAI,EAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC,WAAW,CAAC,8BAA8B,CAAC,EACtE,4BAAI,EAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAErC,CAAO,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;IACrB,IAAI;QACA,YAAY;QACZ,MAAM,MAAM,GAAG,wCAAgB,EAAC,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;YACnB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;SAC3D;QAED,MAAM,MAAM,GAAG,MAAM,wCAAmB,EAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;QACxE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACpB;IAAC,OAAO,GAAG,EAAE;QACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,CAAC;KACb;AACL,CAAC,EAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;AAGnE,qBAAe,MAAM,CAAC;;;;;;;;;;;ACpEtB,2GAAoC;AACpC,kHAAiD;;;;;;;;;;;ACDjD,kHAAyB;AACzB,iHAA8B;;;;;;;;;;;;ACA9B,mDAAgC;AAEzB,MAAM,OAAO,GAAG,GAAmC,EAAE;IACxD,MAAM,gBAAgB,GAAG,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IAClE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAC9B,IAAG,CAAC,gBAAgB,EAAC;QACjB,MAAM,KAAK,CAAC;KACf;IACD,OAAO,kBAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC9C,CAAC;AAPY,eAAO,WAOnB;;;;;;;;;;ACVD,mDAAyC;AAiBzC,MAAM,eAAe,GAAG,IAAI,iBAAM,CAAmB,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;AAC7F,MAAM,cAAc,GAAG,IAAI,iBAAM,CAAkB,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;AAE9G,MAAM,YAAY,GAAG,IAAI,iBAAM,CAAU;IACrC,SAAS,EAAE,eAAe;IAC1B,QAAQ,EAAE,cAAc;CAC3B,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;AAEzB,qBAAe,oBAAK,EAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;;;;;;;;;;;;ACzB7C,+GAA6D;AAEtD,MAAM,mBAAmB,GAAG,CAAO,QAAgB,EAAE,cAA+B,EAAE,EAAE;IAC3F,MAAM,MAAM,GAAG,MAAM,qBAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACpD,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;QAC5B,MAAM,KAAK,CAAC;KACf;IACD,MAAM,CAAC,QAAQ,GAAG,cAAc,CAAC;IACjC,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;IACpB,OAAO,MAAM,CAAC;AAClB,CAAC;AARY,2BAAmB,uBAQ/B;;;;;;;;;;;;ACVD,+GAAqD;AAE9C,MAAM,SAAS,GAAG,CAAO,MAAe,EAAE,EAAE;IAC/C,MAAM,SAAS,GAAG,IAAI,qBAAW,CAAC,MAAM,CAAC,CAAC;IAC1C,MAAM,SAAS,CAAC,IAAI,EAAE,CAAC;IACvB,OAAO,SAAS,CAAC;AACrB,CAAC;AAJY,iBAAS,aAIrB;;;;;;;;;;;;ACND,+GAAqD;AAE9C,MAAM,aAAa,GAAG,CAAO,QAAgB,EAAE,EAAE;IACpD,MAAM,MAAM,GAAG,qBAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAC9C,IAAI,CAAC,MAAM,EAAE;QACT,MAAM,KAAK,CAAC;KACf;IAED,OAAO,MAAM,CAAC;AAClB,CAAC;AAPY,qBAAa,iBAOzB;;;;;;;;;;;ACTD,wHAA8B;AAC9B,gIAAsC;AACtC,sHAA4B;AAC5B,0HAAgC;;;;;;;;;;;ACCzB,MAAM,kBAAkB,GAAG,CAAC,CAAM,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC1F,IAAI,CAAC,KAAK,KAAK,EAAE;QACb,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACjB,OAAO,EAAE,aAAa;SACzB,CAAC,CAAC;KACN;SACI,IAAI,CAAC,KAAK,KAAK,EAAE;QAClB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACjB,OAAO,EAAE,cAAc;SAC1B,CAAC,CAAC;KACN;SACI,IAAI,CAAC,KAAK,KAAK,EAAE;QAClB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACjB,OAAO,EAAE,WAAW;SACvB,CAAC,CAAC;KACN;SAAM,IAAI,CAAC,KAAK,KAAK,EAAE;QACpB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACjB,OAAO,EAAE,WAAW;SACvB,CAAC,CAAC;KACN;SAAM;QACH,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACjB,SAAS,EAAE,CAAC,CAAC,IAAI;YACjB,OAAO,EAAE,CAAC,CAAC,OAAO;SACrB,CAAC,CAAC;KACN;AACL,CAAC,CAAC;AAzBW,0BAAkB,sBAyB7B;;;;;;;;AC7BF;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,mFAAkD;AAClD,4EAAwB;AAExB,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;AAE9B,IAAI;IACF,4BAAO,GAAE,CAAC,IAAI,CAAC,GAAG,EAAE;QAClB,MAAM,MAAM,GAAG,aAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;YACnC,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;YACtC,OAAO,CAAC,GAAG,CAAC,iCAAiC,IAAI,MAAM,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC;CACH;AAAC,OAAO,CAAC,EAAE;IACV,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACrB,MAAM,CAAC,CAAC;CACT","sources":["webpack://surveybear/./apps/surveybear-api/src/app/index.ts","webpack://surveybear/./apps/surveybear-api/src/app/routes/surveyRouter.ts","webpack://surveybear/./libs/surveybear-lib/src/index.ts","webpack://surveybear/./libs/surveybear-lib/src/lib/clients/mongo/index.ts","webpack://surveybear/./libs/surveybear-lib/src/lib/clients/mongo/mongoClient.ts","webpack://surveybear/./libs/surveybear-lib/src/lib/clients/mongo/survey/SurveyModel.ts","webpack://surveybear/./libs/surveybear-lib/src/lib/clients/mongo/survey/addResponseToSurvey.ts","webpack://surveybear/./libs/surveybear-lib/src/lib/clients/mongo/survey/addSurvey.ts","webpack://surveybear/./libs/surveybear-lib/src/lib/clients/mongo/survey/getSurveyById.ts","webpack://surveybear/./libs/surveybear-lib/src/lib/clients/mongo/survey/index.ts","webpack://surveybear/./libs/surveybear-lib/src/lib/logging/globalErrorHandler.ts","webpack://surveybear/external commonjs \"express\"","webpack://surveybear/external commonjs \"express-validator\"","webpack://surveybear/external commonjs \"mongoose\"","webpack://surveybear/external commonjs \"tslib\"","webpack://surveybear/webpack/bootstrap","webpack://surveybear/./apps/surveybear-api/src/main.ts"],"sourcesContent":["import * as express from 'express';\r\nimport {  handleGlobalErrors } from '@surveybear/surveybear-lib';\r\nimport surveyRouter from './routes/surveyRouter';\r\n\r\nconst app = express();\r\n\r\n//Required to parse json body\r\napp.use(express.json());\r\n\r\n//Routers\r\napp.use(surveyRouter);\r\n\r\n//Global error handler\r\napp.use(handleGlobalErrors);\r\n\r\nexport default app;","import { Router } from 'express';\r\nimport { addSurvey, addResponseToSurvey, getSurveyById } from '@surveybear/surveybear-lib';\r\nimport { body, param, validationResult } from 'express-validator';\r\n\r\nconst router = Router();\r\n\r\nrouter.get(\r\n    '/survey/:surveyId',\r\n    param(\"surveyId\").isMongoId(),\r\n    async (req, res, next) => {\r\n        try {\r\n            //validation\r\n            const errors = validationResult(req);\r\n            if (!errors.isEmpty()) {\r\n                return res.status(400).json({ errors: errors.array() });\r\n            }\r\n\r\n            //do stuff if valid input data\r\n            const survey = await getSurveyById(req.params.surveyId);\r\n            res.json(survey);\r\n        } catch (err) {\r\n            next(err);\r\n        }\r\n\r\n    });\r\n\r\nrouter.post('/survey',\r\n    body(\"recipient.name\").isString().isLength({ \"min\": 3 }).withMessage(\"Du måste skriva minst 3 tecken\"),\r\n    body(\"recipient.mobileNumber\").isMobilePhone(\"sv-SE\").withMessage(\"Skriv in ett mobilnummer, t.ex. 070 123 12 12\"),\r\n    async (req, res, next) => {\r\n        try {\r\n            //validation\r\n            const errors = validationResult(req);\r\n            if (!errors.isEmpty()) {\r\n                return res.status(400).json({ errors: errors.array() });\r\n            }\r\n\r\n            const survey = await addSurvey(req.body);\r\n            res.json(survey);\r\n        } catch (err) {\r\n            next(err);\r\n        }\r\n    });\r\n\r\nrouter.patch('/survey/:surveyId',\r\n    param(\"surveyId\").isMongoId(),\r\n    body(\"rating\").isNumeric().withMessage(\"Rating måste vara ett nummer\"),\r\n    body(\"comment\").isString().optional(),\r\n\r\n    async (req, res, next) => {\r\n        try {\r\n            //validation\r\n            const errors = validationResult(req);\r\n            if (!errors.isEmpty()) {\r\n                return res.status(400).json({ errors: errors.array() });\r\n            }\r\n\r\n            const survey = await addResponseToSurvey(req.params.surveyId, req.body);\r\n            res.json(survey);\r\n        } catch (err) {\r\n            console.log(err);\r\n            next(err);\r\n        }\r\n    });\r\n\r\n    router.get('/api/todos', (req, res) => res.status(200).send());\r\n\r\n    \r\nexport default router;","export * from './lib/clients/mongo';\r\nexport * from './lib/logging/globalErrorHandler';","export * from './survey';\r\nexport * from './mongoClient';\r\n","\r\nimport mongoose from 'mongoose';\r\n\r\nexport const connect = async (): Promise<typeof mongoose> => {\r\n    const connectionString = process.env['MONGODB_CONNECTION_STRING'];\r\n    console.log(connectionString);\r\n    if(!connectionString){\r\n        throw \"400\";\r\n    }\r\n    return mongoose.connect(connectionString);\r\n}","import { Schema, model } from 'mongoose';\r\n\r\nexport interface ISurveyResponse {\r\n    rating: number,\r\n    comment?: string\r\n}\r\n\r\nexport interface ISurvey {\r\n    recipient: ISurveyRecipient,\r\n    response?: ISurveyResponse\r\n}\r\n\r\nexport interface ISurveyRecipient {\r\n    name: string,\r\n    mobileNumber: string\r\n}\r\n\r\nconst RecipientSchema = new Schema<ISurveyRecipient>({ name: String, mobileNumber: String });\r\nconst ResponseSchema = new Schema<ISurveyResponse>({ rating: Number, comment: String }, { timestamps: true });\r\n\r\nconst SurveySchema = new Schema<ISurvey>({\r\n    recipient: RecipientSchema,\r\n    response: ResponseSchema\r\n}, { timestamps: true });\r\n\r\nexport default model(\"survey\", SurveySchema);","import SurveyModel, { ISurveyResponse } from './SurveyModel';\r\n\r\nexport const addResponseToSurvey = async (surveyId: string, surveyResponse: ISurveyResponse) => {\r\n    const survey = await SurveyModel.findById(surveyId);\r\n    if (!survey || survey.response) {\r\n        throw \"404\";\r\n    }\r\n    survey.response = surveyResponse;\r\n    await survey.save();\r\n    return survey;\r\n}","import SurveyModel, { ISurvey } from './SurveyModel';\r\n\r\nexport const addSurvey = async (survey: ISurvey) => {\r\n    const newSurvey = new SurveyModel(survey);\r\n    await newSurvey.save();\r\n    return newSurvey;\r\n}","import SurveyModel, { ISurvey } from './SurveyModel';\r\n\r\nexport const getSurveyById = async (surveyId: string) => {\r\n    const survey = SurveyModel.findById(surveyId);\r\n    if (!survey) {\r\n        throw \"404\";\r\n    }\r\n\r\n    return survey;\r\n}","export * from './SurveyModel';\r\nexport * from './addResponseToSurvey';\r\nexport * from './addSurvey';\r\nexport * from './getSurveyById';\r\n","\r\n\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\nexport const handleGlobalErrors = (e: any, req: Request, res: Response, next: NextFunction) => {\r\n    if (e === '400') {\r\n        res.status(400).json({\r\n            message: 'Bad Request',\r\n        });\r\n    }\r\n    else if (e === '401') {\r\n        res.status(401).json({\r\n            message: 'Unauthorized',\r\n        });\r\n    }\r\n    else if (e === '403') {\r\n        res.status(403).json({\r\n            message: 'Forbidden',\r\n        });\r\n    } else if (e === '404') {\r\n        res.status(404).json({\r\n            message: 'Not Found',\r\n        });\r\n    } else {\r\n        res.status(500).json({\r\n            errorCode: e.code,\r\n            message: e.message,\r\n        });\r\n    }\r\n};\r\n","module.exports = require(\"express\");","module.exports = require(\"express-validator\");","module.exports = require(\"mongoose\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import {connect} from \"@surveybear/surveybear-lib\"\r\nimport app from \"./app\";\r\n\r\nconst port = process.env.PORT;\r\n\r\ntry {\r\n  connect().then(() => {\r\n    const server = app.listen(port, () => {\r\n      console.log('running in test branch');\r\n      console.log(`Listening at http://localhost:${port}/api`);\r\n    });\r\n    server.on('error', () => console.log('error'));\r\n  })\r\n} catch (e) {\r\n  console.log('error');\r\n  throw e;\r\n}\r\n"],"names":[],"sourceRoot":""}